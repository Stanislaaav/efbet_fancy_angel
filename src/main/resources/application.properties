# ===============================
# CHANGE SERVER PORT
# ===============================
server.port=${port:8080}

# ===============================
# DATABASE CONNECTION
# ===============================
# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
spring.datasource.url = jdbc:postgresql://${dbHost:localhost}:${dbPort:5432}/${dbName:efbet}
spring.datasource.username = ${dbUser:postgres}
spring.datasource.password = ${dbPass:postgres}
spring.datasource.driver-class-name = org.postgresql.Driver

# ===============================
# DATABASE SETTINGS
# ===============================

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.EJB3NamingStrategy
# Physical strategy
spring.jpa.hibernate.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# ===============================
# URL
# ===============================
currency.exchange.rate.url = http://data.fixer.io/api/latest?access_key=${accessKey:b4f8f781116dbb552b7858e688117998}&format=${format:1}

# ===============================
# SPRING CLOUD SECURITY
# ===============================
spring.security.oauth2.client.registration.google.client-id=224988127244-jo5jk7o6pf1rdc60hauhopfonbqfu229.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=Hz_pZJPoCYTN2P9JdMImKzb6
